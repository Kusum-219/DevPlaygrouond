name: Firebase App Distribution

on:
  push:
    branches:
      - main  # Trigger workflow on pushes to the main branch; change if needed

jobs:
  distribute:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up JDK 17  # Update this step to use JDK 17
      uses: actions/setup-java@v2
      with:
        distribution: 'zulu'
        java-version: '17'  # Change to Java 17

    - name: Install Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '16'

    - name: Install dependencies
      run: npm install

    - name: Create assets directory
      run: mkdir -p android/app/src/main/assets

    - name: Bundle React Native code
      run: |
        npx react-native bundle \
          --platform android \
          --dev false \
          --entry-file index.js \
          --bundle-output android/app/src/main/assets/index.android.bundle \
          --assets-dest android/app/src/main/res/

    - name: Make Gradle executable
      run: chmod +x android/gradlew

    - name: Build Android APK
      run: |
        cd android
        ./gradlew assembleRelease

    - name: Upload APK to Firebase App Distribution
      env:
        GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
        ANDROID_PACKAGE_NAME: ${{ secrets.ANDROID_PACKAGE_NAME }}
        FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}
        FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
      run: |
        curl -X POST \
          -F "app_id=${{ secrets.FIREBASE_APP_ID }}" \
          -F "releaseNotes=Automated release via GitHub Actions" \
          -F "testers=YOUR_TESTER_EMAILS" \
          -F "releaseFile=@android/app/build/outputs/apk/release/app-release.apk" \
          -H "Authorization: Bearer $(gcloud auth application-default print-access-token)" \
          https://firebaseappdistribution.googleapis.com/v1alpha/apps/${{ secrets.ANDROID_PACKAGE_NAME }}/releases:upload
